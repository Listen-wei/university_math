{"ast":null,"code":"var _jsxFileName = \"D:\\\\university_math\\\\src\\\\components\\\\Tests\\\\TestGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, Box, FormControl, InputLabel, Select, MenuItem, TextField, Button, Grid, CircularProgress, Alert, Card, CardContent, Divider, Chip, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from '@mui/material';\nimport { Print, Save, Close, Refresh } from '@mui/icons-material';\nimport axios from 'axios';\nimport { testsAPI } from '../../api/api';\nimport 'katex/dist/katex.min.css';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport { styled } from '@mui/material/styles';\n\n// 自定义样式组件，覆盖KaTeX默认的错误显示样式\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledBlockMath = styled(BlockMath)(({\n  theme\n}) => ({\n  '& .katex': {\n    color: 'inherit',\n    // 使用继承的颜色而不是默认的红色\n    fontSize: '1.1em'\n  },\n  '& .katex-error': {\n    color: theme.palette.text.primary,\n    backgroundColor: 'transparent',\n    border: 'none',\n    padding: 0\n  },\n  '& .katex-display': {\n    overflow: 'auto',\n    padding: '8px 0'\n  }\n}));\n_c = StyledBlockMath;\nconst StyledInlineMath = styled(InlineMath)(({\n  theme\n}) => ({\n  '& .katex': {\n    color: 'inherit',\n    fontSize: '1.05em'\n  },\n  '& .katex-error': {\n    color: theme.palette.text.primary,\n    backgroundColor: 'transparent',\n    border: 'none',\n    padding: 0\n  }\n}));\nconst TestGenerator = () => {\n  _s();\n  const [testConfig, setTestConfig] = useState({\n    type: '',\n    difficulty: '',\n    questionCount: 10,\n    topics: '',\n    includeAnswers: true\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedTest, setGeneratedTest] = useState(null);\n  const [openPreview, setOpenPreview] = useState(false);\n\n  // 数学题类型选项\n  const mathTypes = [{\n    value: 'calculus',\n    label: '微积分',\n    topics: ['极限', '导数', '积分', '微分方程']\n  }, {\n    value: 'algebra',\n    label: '线性代数',\n    topics: ['矩阵', '行列式', '向量空间', '特征值']\n  }, {\n    value: 'probability',\n    label: '概率统计',\n    topics: ['概率分布', '随机变量', '假设检验', '回归分析']\n  }];\n\n  // 当前选择类型的可用主题\n  const [availableTopics, setAvailableTopics] = useState([]);\n\n  // 当类型改变时更新可用主题\n  useEffect(() => {\n    if (testConfig.type) {\n      const selectedType = mathTypes.find(type => type.value === testConfig.type);\n      if (selectedType) {\n        setAvailableTopics(selectedType.topics);\n      }\n    } else {\n      setAvailableTopics([]);\n    }\n  }, [testConfig.type]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTestConfig(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setTestConfig(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setGeneratedTest(null);\n    try {\n      // 构建请求参数\n      const requestData = {\n        ...testConfig,\n        questionCount: parseInt(testConfig.questionCount, 10)\n      };\n\n      // 调用后端API生成测试题\n      const response = await testsAPI.generateTest(requestData);\n      if (response.data && response.data.questions) {\n        setGeneratedTest(response.data);\n      } else {\n        throw new Error('生成测试题失败，请重试');\n      }\n    } catch (err) {\n      console.error('生成测试题错误:', err);\n      setError('生成测试题失败，请重试');\n\n      // 如果后端API未实现，使用模拟数据进行演示\n      simulateTestGeneration();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 模拟测试生成（当后端API未实现时使用）\n  const simulateTestGeneration = () => {\n    var _mathTypes$find;\n    // 根据选择的类型和难度生成模拟题目\n    const mockQuestions = [];\n    const difficultyMap = {\n      easy: '简单',\n      medium: '中等',\n      hard: '困难'\n    };\n    const typeLabel = ((_mathTypes$find = mathTypes.find(t => t.value === testConfig.type)) === null || _mathTypes$find === void 0 ? void 0 : _mathTypes$find.label) || '数学';\n\n    // 使用OpenAI API模拟生成题目（实际项目中应在后端实现）\n    // 这里仅作为前端演示\n    for (let i = 1; i <= testConfig.questionCount; i++) {\n      let questionText = '';\n\n      // 根据不同类型生成不同题目\n      if (testConfig.type === 'calculus') {\n        if (testConfig.difficulty === 'easy') {\n          questionText = `计算函数 f(x) = x^2 + ${i} 在点 x = ${i} 处的导数。`;\n        } else if (testConfig.difficulty === 'medium') {\n          questionText = `求函数 f(x) = x^3 - ${i + 2}x^2 + ${i * 2}x - ${i} 的极值点。\\\\求导数 f'(x) = 3x^2 - ${2 * (i + 2)}x + ${i * 2}，令 f'(x) = 0，解得 x = \\\\frac{${i + 2} \\\\pm \\\\sqrt{${(i + 2) * (i + 2)} - 3 \\\\cdot ${i * 2}}}{3}`;\n        } else {\n          questionText = `计算积分 \\int (x^2 + \\sin(${i}x)) dx`;\n        }\n      } else if (testConfig.type === 'algebra') {\n        if (testConfig.difficulty === 'easy') {\n          questionText = `计算矩阵 A = \\\\begin{pmatrix} ${i} & ${i + 1} \\\\\\\\ ${i + 2} & ${i + 3} \\\\end{pmatrix} 的行列式。`;\n        } else if (testConfig.difficulty === 'medium') {\n          questionText = `求矩阵 A = \\\\begin{pmatrix} ${i} & ${i + 1} & ${i + 2} \\\\\\\\ ${i + 3} & ${i + 4} & ${i + 5} \\\\\\\\ ${i + 6} & ${i + 7} & ${i + 8} \\\\end{pmatrix} 的特征值。`;\n        } else {\n          questionText = `证明向量组 \\\\{(${i},${i + 1},${i + 2}), (${i + 3},${i + 4},${i + 5}), (${i + 6},${i + 7},${i + 8})\\\\} 是线性相关的。`;\n        }\n      } else if (testConfig.type === 'probability') {\n        if (testConfig.difficulty === 'easy') {\n          questionText = `一个骰子投掷${i + 1}次，求至少出现一次6点的概率。`;\n        } else if (testConfig.difficulty === 'medium') {\n          questionText = `设随机变量X的概率密度函数为f(x)=${i}e^{-${i}x}，x>0，求E(X)和D(X)。`;\n        } else {\n          questionText = `设总体X服从正态分布N(\\\\mu,\\\\sigma^2)，从该总体中抽取容量为${i + 10}的样本，样本均值为${i + 5}，样本方差为${i + 2}，试构造\\\\mu的置信水平为0.95的置信区间。`;\n        }\n      } else {\n        questionText = `第${i}题：这是一道${difficultyMap[testConfig.difficulty] || ''}难度的${typeLabel}题目。`;\n      }\n\n      // 生成答案（如果需要）\n      let answer = '';\n      if (testConfig.includeAnswers) {\n        if (testConfig.type === 'calculus') {\n          if (testConfig.difficulty === 'easy') {\n            answer = `f'(${i}) = 2 \\\\cdot ${i} = ${2 * i}`;\n          } else if (testConfig.difficulty === 'medium') {\n            answer = `令f'(x) = 0，得到x = ${i / 3} 或 x = ${i}。\\\\代入二阶导数 f''(x) = 6x - ${2 * (i + 2)} 判断极值类型。`;\n          } else {\n            answer = `\\\\int (x^2 + \\\\sin(${i}x)) dx = \\frac{x^3}{3} - \\frac{\\cos(${i}x)}{${i}} + C`;\n          }\n        } else if (testConfig.type === 'algebra') {\n          if (testConfig.difficulty === 'easy') {\n            answer = `\\\\det(A) = ${i} \\\\times ${i + 3} - ${i + 1} \\\\times ${i + 2} = ${i * (i + 3) - (i + 1) * (i + 2)}`;\n          } else {\n            answer = `特征值计算过程略，结果为\\\\lambda_1 = ${i + i}, \\\\lambda_2 = ${i + 2}, \\\\lambda_3 = ${i + 4}`;\n          }\n        } else if (testConfig.type === 'probability') {\n          if (testConfig.difficulty === 'easy') {\n            answer = `1 - (\\frac{5}{6})^{${i + 1}} \\approx ${(1 - Math.pow(5 / 6, i + 1)).toFixed(4)}`;\n          } else if (testConfig.difficulty === 'medium') {\n            answer = `E(X) = \\frac{1}{${i}}，D(X) = \\frac{1}{${i * i}}`;\n          } else {\n            answer = `\\mu的95\\%置信区间为 [${i + 5} - 1.96 \\cdot \\frac{\\sqrt{${i + 2}}}{\\sqrt{${i + 10}}}, ${i + 5} + 1.96 \\cdot \\frac{\\sqrt{${i + 2}}}{\\sqrt{${i + 10}}}]`;\n          }\n        } else {\n          answer = `解答过程略。最终结果：${Math.random().toFixed(4)}`;\n        }\n      }\n      mockQuestions.push({\n        id: i,\n        question: questionText,\n        answer: answer,\n        type: testConfig.type,\n        difficulty: testConfig.difficulty,\n        topic: availableTopics[i % availableTopics.length] || '通用'\n      });\n    }\n\n    // 设置生成的测试\n    setGeneratedTest({\n      title: `${typeLabel}${difficultyMap[testConfig.difficulty] || ''}难度测试`,\n      description: `包含${testConfig.questionCount}道${typeLabel}题目，难度级别：${difficultyMap[testConfig.difficulty] || '未指定'}`,\n      createdAt: new Date().toISOString(),\n      questions: mockQuestions\n    });\n  };\n\n  // 处理数学公式格式化，确保正确渲染各种数学符号\n  const formatMathExpression = expression => {\n    // 处理空值或undefined\n    if (expression === null || expression === undefined) return '';\n\n    // 处理非字符串类型（如对象）\n    if (typeof expression !== 'string') {\n      try {\n        if (typeof expression === 'number') {\n          return expression.toString();\n        } else if (expression.toString() === '[object Object]') {\n          try {\n            return JSON.stringify(expression);\n          } catch (jsonError) {\n            return '表达式';\n          }\n        }\n        return expression.toString();\n      } catch (e) {\n        console.error('格式化表达式错误:', e);\n        return '';\n      }\n    }\n\n    // 确保expression是字符串类型\n    let formatted = expression.trim();\n\n    // 基本清理\n    formatted = formatted.replace(/\\\\\\\\n/g, ' ');\n    formatted = formatted.replace(/\\\\\\\\t/g, ' ');\n    formatted = formatted.replace(/\\\\\\\\r/g, ' ');\n    formatted = formatted.replace(/\\s{2,}/g, ' ');\n\n    // 处理常见的数学函数，确保它们有反斜杠前缀\n    const mathFunctions = ['sin', 'cos', 'tan', 'cot', 'sec', 'csc', 'arcsin', 'arccos', 'arctan', 'ln', 'log', 'lim', 'int', 'sum'];\n    mathFunctions.forEach(func => {\n      const pattern = new RegExp(`\\\\b${func}\\\\b(?!\\\\{)`, 'g');\n      formatted = formatted.replace(pattern, `\\\\${func}`);\n    });\n\n    // 处理特殊符号\n    const specialSymbols = [{\n      symbol: 'infty',\n      latex: '\\\\infty'\n    }, {\n      symbol: 'pi',\n      latex: '\\\\pi'\n    }, {\n      symbol: 'alpha',\n      latex: '\\\\alpha'\n    }, {\n      symbol: 'beta',\n      latex: '\\\\beta'\n    }, {\n      symbol: 'gamma',\n      latex: '\\\\gamma'\n    }, {\n      symbol: 'delta',\n      latex: '\\\\delta'\n    }, {\n      symbol: 'theta',\n      latex: '\\\\theta'\n    }, {\n      symbol: 'lambda',\n      latex: '\\\\lambda'\n    }, {\n      symbol: 'sigma',\n      latex: '\\\\sigma'\n    }, {\n      symbol: 'omega',\n      latex: '\\\\omega'\n    }, {\n      symbol: 'to',\n      latex: '\\\\to'\n    }];\n    specialSymbols.forEach(({\n      symbol,\n      latex\n    }) => {\n      const pattern = new RegExp(`\\\\b${symbol}\\\\b`, 'g');\n      formatted = formatted.replace(pattern, latex);\n    });\n\n    // 处理分数\n    formatted = formatted.replace(/frac\\{([^}]*)\\}\\{([^}]*)\\}/g, \"\\\\frac{$1}{$2}\");\n    formatted = formatted.replace(/frac\\(([^,]*),([^)]*)\\)/g, \"\\\\frac{$1}{$2}\");\n\n    // 处理下标和上标\n    formatted = formatted.replace(/_([a-zA-Z0-9])(?![a-zA-Z0-9{}])/g, \"_{$1}\");\n    formatted = formatted.replace(/\\^([a-zA-Z0-9])(?![a-zA-Z0-9{}])/g, \"^{$1}\");\n\n    // 处理根号\n    formatted = formatted.replace(/sqrt\\(([^)]*)\\)/g, \"\\\\sqrt{$1}\");\n    formatted = formatted.replace(/sqrt([^{\\(])/g, \"\\\\sqrt{$1}\");\n\n    // 处理多余的反斜杠\n    formatted = formatted.replace(/\\\\\\\\([a-zA-Z])/g, \"\\\\$1\");\n    return formatted;\n  };\n\n  // 处理打印功能\n  const handlePrint = () => {\n    const printWindow = window.open('', '_blank');\n    if (!printWindow) {\n      setError('打印窗口被阻止，请允许弹出窗口');\n      return;\n    }\n\n    // 构建打印内容\n    let printContent = `\n      <html>\n        <head>\n          <title>${generatedTest.title}</title>\n          <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.16.22/dist/katex.min.css\" integrity=\"sha384-3UiQGuEI4TTMaFmGIZumfRPtfKQ3trwQE2JgosJxCnGmQpL/lJdjpcHkaaFwHlcI\" crossorigin=\"anonymous\">\n          <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.16.22/dist/katex.min.js\" integrity=\"sha384-cpW21h6RZv/phavutF+AuVYrr+dA8xD9zs6FwLpaCct6O9ctzYFfFr4dgmgccOTx\" crossorigin=\"anonymous\"></script>\n          <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.16.22/dist/contrib/auto-render.min.js\" integrity=\"sha384-+XBljXPPiv+OzfbB3cVmLHf4hdUFHlWNZN5spNQ7rmHTXpd7WvJum6fIACpNNfIR\" crossorigin=\"anonymous\"></script>\n          <script>\n            document.addEventListener(\"DOMContentLoaded\", function() {\n              renderMathInElement(document.body, {\n                delimiters: [\n                  {left: \"$$\", right: \"$$\", display: true},\n                  {left: \"$\", right: \"$\", display: false}\n                ]\n              });\n            });\n          </script>\n          <style>\n            body { font-family: Arial, sans-serif; padding: 20px; }\n            h1 { text-align: center; }\n            .question { margin-bottom: 20px; }\n            .answer { margin-top: 10px; margin-bottom: 30px; padding: 10px; background-color: #f5f5f5; }\n            @media print {\n              .no-print { display: none; }\n              button { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"no-print\" style=\"text-align: right; margin-bottom: 20px;\">\n            <button onclick=\"window.print()\">打印</button>\n          </div>\n          <h1>${generatedTest.title}</h1>\n          <p>${generatedTest.description}</p>\n          <hr>\n    `;\n\n    // 添加题目\n    generatedTest.questions.forEach((q, index) => {\n      // 根据题目类型决定是否使用KaTeX格式\n      let questionContent = q.question;\n      let answerContent = q.answer;\n      if (testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability') {\n        questionContent = `$$${formatMathExpression(q.question)}$$`;\n        if (q.answer) {\n          answerContent = `$$${formatMathExpression(q.answer)}$$`;\n        }\n      }\n      printContent += `\n        <div class=\"question\">\n          <h3>题目 ${index + 1}</h3>\n          <p>${questionContent}</p>\n      `;\n      if (testConfig.includeAnswers && q.answer) {\n        printContent += `\n          <div class=\"answer\">\n            <strong>答案：</strong>\n            <p>${answerContent}</p>\n          </div>\n        `;\n      }\n      printContent += `</div>`;\n    });\n    printContent += `\n        </body>\n      </html>\n    `;\n    printWindow.document.open();\n    printWindow.document.write(printContent);\n    printWindow.document.close();\n  };\n\n  // 处理保存功能\n  const handleSave = async () => {\n    try {\n      const response = await testsAPI.saveTest(generatedTest);\n      if (response.data && response.data.success) {\n        alert('测试已成功保存！');\n      } else {\n        throw new Error('保存失败');\n      }\n    } catch (err) {\n      console.error('保存测试失败:', err);\n      setError('保存测试失败，请重试');\n    }\n  };\n\n  // 预览对话框渲染函数\n  const renderTestPreviewDialog = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openPreview,\n    onClose: () => setOpenPreview(false),\n    fullWidth: true,\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [generatedTest === null || generatedTest === void 0 ? void 0 : generatedTest.title, /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        onClick: () => setOpenPreview(false),\n        sx: {\n          position: 'absolute',\n          right: 8,\n          top: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: generatedTest === null || generatedTest === void 0 ? void 0 : generatedTest.questions.map((q, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"\\u9898\\u76EE \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability' ? /*#__PURE__*/_jsxDEV(StyledBlockMath, {\n            math: formatMathExpression(q.question),\n            errorColor: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this) : q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), testConfig.includeAnswers && q.answer && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1,\n            p: 2,\n            bgcolor: '#f5f5f5',\n            borderRadius: 1,\n            overflow: 'auto',\n            maxWidth: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"\\u7B54\\u6848\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              overflowX: 'auto',\n              overflowY: 'visible',\n              minHeight: '50px'\n            },\n            children: testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability' ? /*#__PURE__*/_jsxDEV(StyledBlockMath, {\n              math: formatMathExpression(q.answer),\n              errorColor: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 21\n            }, this) : q.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mt: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePrint,\n        startIcon: /*#__PURE__*/_jsxDEV(Print, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 50\n        }, this),\n        children: \"\\u6253\\u5370\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 49\n        }, this),\n        color: \"primary\",\n        children: \"\\u4FDD\\u5B58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"\\u751F\\u6210\\u6D4B\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        align: \"center\",\n        color: \"text.secondary\",\n        children: \"\\u914D\\u7F6E\\u6D4B\\u8BD5\\u53C2\\u6570\\uFF0C\\u751F\\u6210\\u4E2A\\u6027\\u5316\\u6570\\u5B66\\u9898\\u76EE\\u6D4B\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"\\u6D4B\\u8BD5\\u7C7B\\u578B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"type\",\n                value: testConfig.type,\n                label: \"\\u6D4B\\u8BD5\\u7C7B\\u578B\",\n                onChange: handleChange,\n                required: true,\n                children: mathTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type.value,\n                  children: type.label\n                }, type.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"\\u96BE\\u5EA6\\u7B49\\u7EA7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"difficulty\",\n                value: testConfig.difficulty,\n                label: \"\\u96BE\\u5EA6\\u7B49\\u7EA7\",\n                onChange: handleChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"easy\",\n                  children: \"\\u7B80\\u5355\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"medium\",\n                  children: \"\\u4E2D\\u7B49\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"hard\",\n                  children: \"\\u56F0\\u96BE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\u9898\\u76EE\\u6570\\u91CF\",\n              name: \"questionCount\",\n              type: \"number\",\n              value: testConfig.questionCount,\n              onChange: handleChange,\n              InputProps: {\n                inputProps: {\n                  min: 1,\n                  max: 50\n                }\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), testConfig.type && availableTopics.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"\\u77E5\\u8BC6\\u70B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"topics\",\n                value: testConfig.topics,\n                label: \"\\u77E5\\u8BC6\\u70B9\",\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"\\u5168\\u90E8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this), availableTopics.map(topic => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: topic,\n                  children: topic\n                }, topic, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: \"\\u5176\\u4ED6\\u9009\\u9879\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"includeAnswers\",\n                  name: \"includeAnswers\",\n                  checked: testConfig.includeAnswers,\n                  onChange: handleCheckboxChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"includeAnswers\",\n                  style: {\n                    marginLeft: '8px'\n                  },\n                  children: \"\\u5305\\u542B\\u7B54\\u6848\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                mt: 2\n              },\n              disabled: loading,\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 28\n              }, this) : '生成测试'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), generatedTest && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"\\u751F\\u6210\\u7684\\u6D4B\\u8BD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(Print, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 28\n            }, this),\n            onClick: handlePrint,\n            sx: {\n              mr: 1\n            },\n            children: \"\\u6253\\u5370\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 28\n            }, this),\n            onClick: handleSave,\n            children: \"\\u4FDD\\u5B58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: generatedTest.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: generatedTest.questions.slice(0, 3).map((question, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: [\"\\u9898\\u76EE \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: question.topic,\n                    size: \"small\",\n                    color: \"primary\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  paragraph: true,\n                  children: testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability' ? /*#__PURE__*/_jsxDEV(StyledBlockMath, {\n                    math: formatMathExpression(question.question),\n                    errorColor: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 27\n                  }, this) : question.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 23\n                }, this), testConfig.includeAnswers && question.answer && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 1,\n                    p: 2,\n                    bgcolor: '#f5f5f5',\n                    borderRadius: 1,\n                    overflow: 'auto',\n                    maxWidth: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    gutterBottom: true,\n                    children: \"\\u7B54\\u6848\\uFF1A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      overflowX: 'auto',\n                      overflowY: 'visible',\n                      minHeight: '50px'\n                    },\n                    children: testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability' ? /*#__PURE__*/_jsxDEV(StyledBlockMath, {\n                      math: formatMathExpression(question.answer),\n                      errorColor: \"inherit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 660,\n                      columnNumber: 31\n                    }, this) : question.answer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 11\n      }, this), generatedTest.questions.length > 3 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => setOpenPreview(true),\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 28\n          }, this),\n          children: \"\\u67E5\\u770B\\u5168\\u90E8\\u9898\\u76EE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 13\n      }, this), renderTestPreviewDialog()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 5\n  }, this);\n};\n_s(TestGenerator, \"tJWe98NIjwRc1NSVFzZ/Mc8TSPU=\");\n_c2 = TestGenerator;\nexport default TestGenerator;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledBlockMath\");\n$RefreshReg$(_c2, \"TestGenerator\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Typography","Box","FormControl","InputLabel","Select","MenuItem","TextField","Button","Grid","CircularProgress","Alert","Card","CardContent","Divider","Chip","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","Print","Save","Close","Refresh","axios","testsAPI","InlineMath","BlockMath","styled","jsxDEV","_jsxDEV","StyledBlockMath","theme","color","fontSize","palette","text","primary","backgroundColor","border","padding","overflow","_c","StyledInlineMath","TestGenerator","_s","testConfig","setTestConfig","type","difficulty","questionCount","topics","includeAnswers","loading","setLoading","error","setError","generatedTest","setGeneratedTest","openPreview","setOpenPreview","mathTypes","value","label","availableTopics","setAvailableTopics","selectedType","find","handleChange","e","name","target","prev","handleCheckboxChange","checked","handleSubmit","preventDefault","requestData","parseInt","response","generateTest","data","questions","Error","err","console","simulateTestGeneration","_mathTypes$find","mockQuestions","difficultyMap","easy","medium","hard","typeLabel","t","i","questionText","answer","Math","pow","toFixed","random","push","id","question","topic","length","title","description","createdAt","Date","toISOString","formatMathExpression","expression","undefined","toString","JSON","stringify","jsonError","formatted","trim","replace","mathFunctions","forEach","func","pattern","RegExp","specialSymbols","symbol","latex","handlePrint","printWindow","window","open","printContent","q","index","questionContent","answerContent","document","write","close","handleSave","saveTest","success","alert","renderTestPreviewDialog","onClose","fullWidth","maxWidth","children","onClick","sx","position","right","top","fileName","_jsxFileName","lineNumber","columnNumber","dividers","map","mb","variant","gutterBottom","paragraph","math","errorColor","mt","p","bgcolor","borderRadius","overflowX","overflowY","minHeight","startIcon","severity","elevation","align","component","onSubmit","container","spacing","item","xs","sm","onChange","required","InputProps","inputProps","min","max","display","alignItems","htmlFor","style","marginLeft","size","disabled","justifyContent","mr","slice","textAlign","_c2","$RefreshReg$"],"sources":["D:/university_math/src/components/Tests/TestGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  CircularProgress,\r\n  Alert,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Print, Save, Close, Refresh } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport { testsAPI } from '../../api/api';\r\nimport 'katex/dist/katex.min.css';\r\nimport { InlineMath, BlockMath } from 'react-katex';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// 自定义样式组件，覆盖KaTeX默认的错误显示样式\r\nconst StyledBlockMath = styled(BlockMath)(({ theme }) => ({\r\n  '& .katex': {\r\n    color: 'inherit', // 使用继承的颜色而不是默认的红色\r\n    fontSize: '1.1em',\r\n  },\r\n  '& .katex-error': {\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    padding: 0,\r\n  },\r\n  '& .katex-display': {\r\n    overflow: 'auto',\r\n    padding: '8px 0',\r\n  }\r\n}));\r\n\r\nconst StyledInlineMath = styled(InlineMath)(({ theme }) => ({\r\n  '& .katex': {\r\n    color: 'inherit',\r\n    fontSize: '1.05em',\r\n  },\r\n  '& .katex-error': {\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    padding: 0,\r\n  }\r\n}));\r\n\r\nconst TestGenerator = () => {\r\n  const [testConfig, setTestConfig] = useState({\r\n    type: '',\r\n    difficulty: '',\r\n    questionCount: 10,\r\n    topics: '',\r\n    includeAnswers: true,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [generatedTest, setGeneratedTest] = useState(null);\r\n  const [openPreview, setOpenPreview] = useState(false);\r\n  \r\n  // 数学题类型选项\r\n  const mathTypes = [\r\n    { value: 'calculus', label: '微积分', topics: ['极限', '导数', '积分', '微分方程'] },\r\n    { value: 'algebra', label: '线性代数', topics: ['矩阵', '行列式', '向量空间', '特征值'] },\r\n    { value: 'probability', label: '概率统计', topics: ['概率分布', '随机变量', '假设检验', '回归分析'] },\r\n  ];\r\n  \r\n  // 当前选择类型的可用主题\r\n  const [availableTopics, setAvailableTopics] = useState([]);\r\n  \r\n  // 当类型改变时更新可用主题\r\n  useEffect(() => {\r\n    if (testConfig.type) {\r\n      const selectedType = mathTypes.find(type => type.value === testConfig.type);\r\n      if (selectedType) {\r\n        setAvailableTopics(selectedType.topics);\r\n      }\r\n    } else {\r\n      setAvailableTopics([]);\r\n    }\r\n  }, [testConfig.type]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTestConfig((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  \r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setTestConfig((prev) => ({\r\n      ...prev,\r\n      [name]: checked,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setGeneratedTest(null);\r\n    \r\n    try {\r\n      // 构建请求参数\r\n      const requestData = {\r\n        ...testConfig,\r\n        questionCount: parseInt(testConfig.questionCount, 10),\r\n      };\r\n      \r\n      // 调用后端API生成测试题\r\n      const response = await testsAPI.generateTest(requestData);\r\n      \r\n      if (response.data && response.data.questions) {\r\n        setGeneratedTest(response.data);\r\n      } else {\r\n        throw new Error('生成测试题失败，请重试');\r\n      }\r\n    } catch (err) {\r\n      console.error('生成测试题错误:', err);\r\n      setError('生成测试题失败，请重试');\r\n      \r\n      // 如果后端API未实现，使用模拟数据进行演示\r\n      simulateTestGeneration();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // 模拟测试生成（当后端API未实现时使用）\r\n  const simulateTestGeneration = () => {\r\n    // 根据选择的类型和难度生成模拟题目\r\n    const mockQuestions = [];\r\n    const difficultyMap = {\r\n      easy: '简单',\r\n      medium: '中等',\r\n      hard: '困难'\r\n    };\r\n    \r\n    const typeLabel = mathTypes.find(t => t.value === testConfig.type)?.label || '数学';\r\n    \r\n    // 使用OpenAI API模拟生成题目（实际项目中应在后端实现）\r\n    // 这里仅作为前端演示\r\n    for (let i = 1; i <= testConfig.questionCount; i++) {\r\n      let questionText = '';\r\n      \r\n      // 根据不同类型生成不同题目\r\n      if (testConfig.type === 'calculus') {\r\n        if (testConfig.difficulty === 'easy') {\r\n          questionText = `计算函数 f(x) = x^2 + ${i} 在点 x = ${i} 处的导数。`;\r\n        } else if (testConfig.difficulty === 'medium') {\r\n          questionText = `求函数 f(x) = x^3 - ${i+2}x^2 + ${i*2}x - ${i} 的极值点。\\\\求导数 f'(x) = 3x^2 - ${2*(i+2)}x + ${i*2}，令 f'(x) = 0，解得 x = \\\\frac{${i+2} \\\\pm \\\\sqrt{${(i+2)*(i+2)} - 3 \\\\cdot ${i*2}}}{3}`;\r\n        } else {\r\n          questionText = `计算积分 \\int (x^2 + \\sin(${i}x)) dx`;\r\n        }\r\n      } else if (testConfig.type === 'algebra') {\r\n        if (testConfig.difficulty === 'easy') {\r\n          questionText = `计算矩阵 A = \\\\begin{pmatrix} ${i} & ${i+1} \\\\\\\\ ${i+2} & ${i+3} \\\\end{pmatrix} 的行列式。`;\r\n        } else if (testConfig.difficulty === 'medium') {\r\n          questionText = `求矩阵 A = \\\\begin{pmatrix} ${i} & ${i+1} & ${i+2} \\\\\\\\ ${i+3} & ${i+4} & ${i+5} \\\\\\\\ ${i+6} & ${i+7} & ${i+8} \\\\end{pmatrix} 的特征值。`;\r\n        } else {\r\n          questionText = `证明向量组 \\\\{(${i},${i+1},${i+2}), (${i+3},${i+4},${i+5}), (${i+6},${i+7},${i+8})\\\\} 是线性相关的。`;\r\n        }\r\n      } else if (testConfig.type === 'probability') {\r\n        if (testConfig.difficulty === 'easy') {\r\n          questionText = `一个骰子投掷${i+1}次，求至少出现一次6点的概率。`;\r\n        } else if (testConfig.difficulty === 'medium') {\r\n          questionText = `设随机变量X的概率密度函数为f(x)=${i}e^{-${i}x}，x>0，求E(X)和D(X)。`;\r\n        } else {\r\n          questionText = `设总体X服从正态分布N(\\\\mu,\\\\sigma^2)，从该总体中抽取容量为${i+10}的样本，样本均值为${i+5}，样本方差为${i+2}，试构造\\\\mu的置信水平为0.95的置信区间。`;\r\n        }\r\n      } else {\r\n        questionText = `第${i}题：这是一道${difficultyMap[testConfig.difficulty] || ''}难度的${typeLabel}题目。`;\r\n      }\r\n      \r\n      // 生成答案（如果需要）\r\n      let answer = '';\r\n      if (testConfig.includeAnswers) {\r\n        if (testConfig.type === 'calculus') {\r\n          if (testConfig.difficulty === 'easy') {\r\n            answer = `f'(${i}) = 2 \\\\cdot ${i} = ${2*i}`;\r\n          } else if (testConfig.difficulty === 'medium') {\r\n            answer = `令f'(x) = 0，得到x = ${i/3} 或 x = ${i}。\\\\代入二阶导数 f''(x) = 6x - ${2*(i+2)} 判断极值类型。`;\r\n          } else {\r\n            answer = `\\\\int (x^2 + \\\\sin(${i}x)) dx = \\frac{x^3}{3} - \\frac{\\cos(${i}x)}{${i}} + C`;\r\n          }\r\n        } else if (testConfig.type === 'algebra') {\r\n          if (testConfig.difficulty === 'easy') {\r\n            answer = `\\\\det(A) = ${i} \\\\times ${i+3} - ${i+1} \\\\times ${i+2} = ${i*(i+3) - (i+1)*(i+2)}`;\r\n          } else {\r\n            answer = `特征值计算过程略，结果为\\\\lambda_1 = ${i+i}, \\\\lambda_2 = ${i+2}, \\\\lambda_3 = ${i+4}`;\r\n          }\r\n        } else if (testConfig.type === 'probability') {\r\n          if (testConfig.difficulty === 'easy') {\r\n            answer = `1 - (\\frac{5}{6})^{${i+1}} \\approx ${(1 - Math.pow(5/6, i+1)).toFixed(4)}`;\r\n          } else if (testConfig.difficulty === 'medium') {\r\n            answer = `E(X) = \\frac{1}{${i}}，D(X) = \\frac{1}{${i*i}}`;\r\n          } else {\r\n            answer = `\\mu的95\\%置信区间为 [${i+5} - 1.96 \\cdot \\frac{\\sqrt{${i+2}}}{\\sqrt{${i+10}}}, ${i+5} + 1.96 \\cdot \\frac{\\sqrt{${i+2}}}{\\sqrt{${i+10}}}]`;\r\n          }\r\n        } else {\r\n          answer = `解答过程略。最终结果：${Math.random().toFixed(4)}`;\r\n        }\r\n      }\r\n      \r\n      mockQuestions.push({\r\n        id: i,\r\n        question: questionText,\r\n        answer: answer,\r\n        type: testConfig.type,\r\n        difficulty: testConfig.difficulty,\r\n        topic: availableTopics[i % availableTopics.length] || '通用'\r\n      });\r\n    }\r\n    \r\n    // 设置生成的测试\r\n    setGeneratedTest({\r\n      title: `${typeLabel}${difficultyMap[testConfig.difficulty] || ''}难度测试`,\r\n      description: `包含${testConfig.questionCount}道${typeLabel}题目，难度级别：${difficultyMap[testConfig.difficulty] || '未指定'}`,\r\n      createdAt: new Date().toISOString(),\r\n      questions: mockQuestions\r\n    });\r\n  };\r\n\r\n  // 处理数学公式格式化，确保正确渲染各种数学符号\r\n  const formatMathExpression = (expression) => {\r\n    // 处理空值或undefined\r\n    if (expression === null || expression === undefined) return '';\r\n    \r\n    // 处理非字符串类型（如对象）\r\n    if (typeof expression !== 'string') {\r\n      try {\r\n        if (typeof expression === 'number') {\r\n          return expression.toString();\r\n        } else if (expression.toString() === '[object Object]') {\r\n          try {\r\n            return JSON.stringify(expression);\r\n          } catch (jsonError) {\r\n            return '表达式';\r\n          }\r\n        }\r\n        return expression.toString();\r\n      } catch (e) {\r\n        console.error('格式化表达式错误:', e);\r\n        return ''; \r\n      }\r\n    }\r\n    \r\n    // 确保expression是字符串类型\r\n    let formatted = expression.trim();\r\n    \r\n    // 基本清理\r\n    formatted = formatted.replace(/\\\\\\\\n/g, ' ');\r\n    formatted = formatted.replace(/\\\\\\\\t/g, ' ');\r\n    formatted = formatted.replace(/\\\\\\\\r/g, ' ');\r\n    formatted = formatted.replace(/\\s{2,}/g, ' ');\r\n    \r\n    // 处理常见的数学函数，确保它们有反斜杠前缀\r\n    const mathFunctions = ['sin', 'cos', 'tan', 'cot', 'sec', 'csc', 'arcsin', 'arccos', 'arctan', 'ln', 'log', 'lim', 'int', 'sum'];\r\n    mathFunctions.forEach(func => {\r\n      const pattern = new RegExp(`\\\\b${func}\\\\b(?!\\\\{)`, 'g');\r\n      formatted = formatted.replace(pattern, `\\\\${func}`);\r\n    });\r\n    \r\n    // 处理特殊符号\r\n    const specialSymbols = [\r\n      {symbol: 'infty', latex: '\\\\infty'},\r\n      {symbol: 'pi', latex: '\\\\pi'},\r\n      {symbol: 'alpha', latex: '\\\\alpha'},\r\n      {symbol: 'beta', latex: '\\\\beta'},\r\n      {symbol: 'gamma', latex: '\\\\gamma'},\r\n      {symbol: 'delta', latex: '\\\\delta'},\r\n      {symbol: 'theta', latex: '\\\\theta'},\r\n      {symbol: 'lambda', latex: '\\\\lambda'},\r\n      {symbol: 'sigma', latex: '\\\\sigma'},\r\n      {symbol: 'omega', latex: '\\\\omega'},\r\n      {symbol: 'to', latex: '\\\\to'}\r\n    ];\r\n    \r\n    specialSymbols.forEach(({symbol, latex}) => {\r\n      const pattern = new RegExp(`\\\\b${symbol}\\\\b`, 'g');\r\n      formatted = formatted.replace(pattern, latex);\r\n    });\r\n    \r\n    // 处理分数\r\n    formatted = formatted.replace(/frac\\{([^}]*)\\}\\{([^}]*)\\}/g, \"\\\\frac{$1}{$2}\");\r\n    formatted = formatted.replace(/frac\\(([^,]*),([^)]*)\\)/g, \"\\\\frac{$1}{$2}\");\r\n    \r\n    // 处理下标和上标\r\n    formatted = formatted.replace(/_([a-zA-Z0-9])(?![a-zA-Z0-9{}])/g, \"_{$1}\");\r\n    formatted = formatted.replace(/\\^([a-zA-Z0-9])(?![a-zA-Z0-9{}])/g, \"^{$1}\");\r\n    \r\n    // 处理根号\r\n    formatted = formatted.replace(/sqrt\\(([^)]*)\\)/g, \"\\\\sqrt{$1}\");\r\n    formatted = formatted.replace(/sqrt([^{\\(])/g, \"\\\\sqrt{$1}\");\r\n    \r\n    // 处理多余的反斜杠\r\n    formatted = formatted.replace(/\\\\\\\\([a-zA-Z])/g, \"\\\\$1\");\r\n    \r\n    return formatted;\r\n  };\r\n\r\n  // 处理打印功能\r\n  const handlePrint = () => {\r\n    const printWindow = window.open('', '_blank');\r\n    \r\n    if (!printWindow) {\r\n      setError('打印窗口被阻止，请允许弹出窗口');\r\n      return;\r\n    }\r\n    \r\n    // 构建打印内容\r\n    let printContent = `\r\n      <html>\r\n        <head>\r\n          <title>${generatedTest.title}</title>\r\n          <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.16.22/dist/katex.min.css\" integrity=\"sha384-3UiQGuEI4TTMaFmGIZumfRPtfKQ3trwQE2JgosJxCnGmQpL/lJdjpcHkaaFwHlcI\" crossorigin=\"anonymous\">\r\n          <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.16.22/dist/katex.min.js\" integrity=\"sha384-cpW21h6RZv/phavutF+AuVYrr+dA8xD9zs6FwLpaCct6O9ctzYFfFr4dgmgccOTx\" crossorigin=\"anonymous\"></script>\r\n          <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.16.22/dist/contrib/auto-render.min.js\" integrity=\"sha384-+XBljXPPiv+OzfbB3cVmLHf4hdUFHlWNZN5spNQ7rmHTXpd7WvJum6fIACpNNfIR\" crossorigin=\"anonymous\"></script>\r\n          <script>\r\n            document.addEventListener(\"DOMContentLoaded\", function() {\r\n              renderMathInElement(document.body, {\r\n                delimiters: [\r\n                  {left: \"$$\", right: \"$$\", display: true},\r\n                  {left: \"$\", right: \"$\", display: false}\r\n                ]\r\n              });\r\n            });\r\n          </script>\r\n          <style>\r\n            body { font-family: Arial, sans-serif; padding: 20px; }\r\n            h1 { text-align: center; }\r\n            .question { margin-bottom: 20px; }\r\n            .answer { margin-top: 10px; margin-bottom: 30px; padding: 10px; background-color: #f5f5f5; }\r\n            @media print {\r\n              .no-print { display: none; }\r\n              button { display: none; }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"no-print\" style=\"text-align: right; margin-bottom: 20px;\">\r\n            <button onclick=\"window.print()\">打印</button>\r\n          </div>\r\n          <h1>${generatedTest.title}</h1>\r\n          <p>${generatedTest.description}</p>\r\n          <hr>\r\n    `;\r\n    \r\n    // 添加题目\r\n    generatedTest.questions.forEach((q, index) => {\r\n      // 根据题目类型决定是否使用KaTeX格式\r\n      let questionContent = q.question;\r\n      let answerContent = q.answer;\r\n      \r\n      if (testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability') {\r\n        questionContent = `$$${formatMathExpression(q.question)}$$`;\r\n        if (q.answer) {\r\n          answerContent = `$$${formatMathExpression(q.answer)}$$`;\r\n        }\r\n      }\r\n      \r\n      printContent += `\r\n        <div class=\"question\">\r\n          <h3>题目 ${index + 1}</h3>\r\n          <p>${questionContent}</p>\r\n      `;\r\n      \r\n      if (testConfig.includeAnswers && q.answer) {\r\n        printContent += `\r\n          <div class=\"answer\">\r\n            <strong>答案：</strong>\r\n            <p>${answerContent}</p>\r\n          </div>\r\n        `;\r\n      }\r\n      \r\n      printContent += `</div>`;\r\n    });\r\n\r\n    \r\n    printContent += `\r\n        </body>\r\n      </html>\r\n    `;\r\n    \r\n    printWindow.document.open();\r\n    printWindow.document.write(printContent);\r\n    printWindow.document.close();\r\n  };\r\n  \r\n  // 处理保存功能\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await testsAPI.saveTest(generatedTest);\r\n      if (response.data && response.data.success) {\r\n        alert('测试已成功保存！');\r\n      } else {\r\n        throw new Error('保存失败');\r\n      }\r\n    } catch (err) {\r\n      console.error('保存测试失败:', err);\r\n      setError('保存测试失败，请重试');\r\n    }\r\n  };\r\n  \r\n  // 预览对话框渲染函数\r\n  const renderTestPreviewDialog = () => (\r\n    <Dialog \r\n      open={openPreview} \r\n      onClose={() => setOpenPreview(false)}\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle>\r\n        {generatedTest?.title}\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={() => setOpenPreview(false)}\r\n          sx={{ position: 'absolute', right: 8, top: 8 }}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        {generatedTest?.questions.map((q, index) => (\r\n          <Box key={index} sx={{ mb: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              题目 {index + 1}\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n              {testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability' ? \r\n                <StyledBlockMath math={formatMathExpression(q.question)} errorColor=\"inherit\" /> : \r\n                q.question\r\n              }\r\n            </Typography>\r\n            {testConfig.includeAnswers && q.answer && (\r\n              <Box sx={{ mt: 1, p: 2, bgcolor: '#f5f5f5', borderRadius: 1, overflow: 'auto', maxWidth: '100%' }}>\r\n                <Typography variant=\"subtitle2\" gutterBottom>\r\n                  答案：\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ overflowX: 'auto', overflowY: 'visible', minHeight: '50px' }}>\r\n                  {testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability' ? \r\n                    <StyledBlockMath math={formatMathExpression(q.answer)} errorColor=\"inherit\" /> : \r\n                    q.answer\r\n                  }\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n            <Divider sx={{ mt: 2 }} />\r\n          </Box>\r\n        ))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handlePrint} startIcon={<Print />}>\r\n          打印\r\n        </Button>\r\n        <Button onClick={handleSave} startIcon={<Save />} color=\"primary\">\r\n          保存\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      <Paper elevation={3} sx={{ p: 4, mt: 4 }}>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          生成测试\r\n        </Typography>\r\n        <Typography variant=\"body1\" paragraph align=\"center\" color=\"text.secondary\">\r\n          配置测试参数，生成个性化数学题目测试\r\n        </Typography>\r\n        \r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>测试类型</InputLabel>\r\n                <Select\r\n                  name=\"type\"\r\n                  value={testConfig.type}\r\n                  label=\"测试类型\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {mathTypes.map((type) => (\r\n                    <MenuItem key={type.value} value={type.value}>{type.label}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>难度等级</InputLabel>\r\n                <Select\r\n                  name=\"difficulty\"\r\n                  value={testConfig.difficulty}\r\n                  label=\"难度等级\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  <MenuItem value=\"easy\">简单</MenuItem>\r\n                  <MenuItem value=\"medium\">中等</MenuItem>\r\n                  <MenuItem value=\"hard\">困难</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"题目数量\"\r\n                name=\"questionCount\"\r\n                type=\"number\"\r\n                value={testConfig.questionCount}\r\n                onChange={handleChange}\r\n                InputProps={{ inputProps: { min: 1, max: 50 } }}\r\n                required\r\n              />\r\n            </Grid>\r\n            \r\n            {testConfig.type && availableTopics.length > 0 && (\r\n              <Grid item xs={12}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>知识点</InputLabel>\r\n                  <Select\r\n                    name=\"topics\"\r\n                    value={testConfig.topics}\r\n                    label=\"知识点\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"\">全部</MenuItem>\r\n                    {availableTopics.map((topic) => (\r\n                      <MenuItem key={topic} value={topic}>{topic}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            \r\n            <Grid item xs={12}>\r\n              <FormControl component=\"fieldset\" sx={{ mt: 2 }}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                  其他选项\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"includeAnswers\"\r\n                    name=\"includeAnswers\"\r\n                    checked={testConfig.includeAnswers}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                  <label htmlFor=\"includeAnswers\" style={{ marginLeft: '8px' }}>\r\n                    包含答案\r\n                  </label>\r\n                </Box>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                sx={{ mt: 2 }}\r\n                disabled={loading}\r\n              >\r\n                {loading ? <CircularProgress size={24} /> : '生成测试'}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n      \r\n      {generatedTest && (\r\n        <Paper elevation={3} sx={{ p: 4, mt: 4 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n            <Typography variant=\"h5\">\r\n              生成的测试\r\n            </Typography>\r\n            <Box>\r\n              <Button \r\n                variant=\"outlined\" \r\n                startIcon={<Print />} \r\n                onClick={handlePrint}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                打印\r\n              </Button>\r\n              <Button \r\n                variant=\"outlined\" \r\n                startIcon={<Save />} \r\n                onClick={handleSave}\r\n              >\r\n                保存\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          \r\n          <Typography variant=\"body1\" paragraph>\r\n            {generatedTest.description}\r\n          </Typography>\r\n          \r\n          <Box sx={{ mb: 3 }}>\r\n            <Grid container spacing={2}>\r\n              {generatedTest.questions.slice(0, 3).map((question, index) => (\r\n                <Grid item xs={12} key={index}>\r\n                  <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                          题目 {index + 1}\r\n                        </Typography>\r\n                        <Chip \r\n                          label={question.topic} \r\n                          size=\"small\" \r\n                          color=\"primary\" \r\n                          variant=\"outlined\" \r\n                        />\r\n                      </Box>\r\n                      <Typography variant=\"body1\" paragraph>\r\n                        {testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability' ? \r\n                          <StyledBlockMath math={formatMathExpression(question.question)} errorColor=\"inherit\" /> : \r\n                          question.question\r\n                        }\r\n                      </Typography>\r\n                      {testConfig.includeAnswers && question.answer && (\r\n                        <Box sx={{ mt: 1, p: 2, bgcolor: '#f5f5f5', borderRadius: 1, overflow: 'auto', maxWidth: '100%' }}>\r\n                          <Typography variant=\"subtitle2\" gutterBottom>\r\n                            答案：\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" sx={{ overflowX: 'auto', overflowY: 'visible', minHeight: '50px' }}>\r\n                            {testConfig.type === 'calculus' || testConfig.type === 'algebra' || testConfig.type === 'probability' ? \r\n                              <StyledBlockMath math={formatMathExpression(question.answer)} errorColor=\"inherit\" /> : \r\n                              question.answer\r\n                            }\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n          \r\n          {generatedTest.questions.length > 3 && (\r\n            <Box sx={{ textAlign: 'center', mt: 2 }}>\r\n              <Button \r\n                variant=\"outlined\" \r\n                onClick={() => setOpenPreview(true)}\r\n                startIcon={<Refresh />}\r\n              >\r\n                查看全部题目\r\n              </Button>\r\n            </Box>\r\n          )}\r\n          \r\n          {renderTestPreviewDialog()}\r\n        </Paper>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TestGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}