{"ast":null,"code":"var _jsxFileName = \"D:\\\\university_math\\\\src\\\\components\\\\Tests\\\\TestGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, Box, FormControl, InputLabel, Select, MenuItem, TextField, Button, Grid, CircularProgress, Alert, Card, CardContent, Divider, Chip, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from '@mui/material';\nimport { Print, Save, Close, Refresh } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestGenerator = () => {\n  _s();\n  const [testConfig, setTestConfig] = useState({\n    type: '',\n    difficulty: '',\n    questionCount: 10,\n    topics: '',\n    includeAnswers: true\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedTest, setGeneratedTest] = useState(null);\n  const [openPreview, setOpenPreview] = useState(false);\n\n  // 数学题类型选项\n  const mathTypes = [{\n    value: 'calculus',\n    label: '微积分',\n    topics: ['极限', '导数', '积分', '微分方程']\n  }, {\n    value: 'algebra',\n    label: '线性代数',\n    topics: ['矩阵', '行列式', '向量空间', '特征值']\n  }, {\n    value: 'probability',\n    label: '概率统计',\n    topics: ['概率分布', '随机变量', '假设检验', '回归分析']\n  }];\n\n  // 当前选择类型的可用主题\n  const [availableTopics, setAvailableTopics] = useState([]);\n\n  // 当类型改变时更新可用主题\n  useEffect(() => {\n    if (testConfig.type) {\n      const selectedType = mathTypes.find(type => type.value === testConfig.type);\n      if (selectedType) {\n        setAvailableTopics(selectedType.topics);\n      }\n    } else {\n      setAvailableTopics([]);\n    }\n  }, [testConfig.type]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTestConfig(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setTestConfig(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setGeneratedTest(null);\n    try {\n      // 构建请求参数\n      const requestData = {\n        ...testConfig,\n        questionCount: parseInt(testConfig.questionCount, 10)\n      };\n\n      // 调用后端API生成测试题\n      const response = await testsAPI.generateTest(requestData);\n      if (response.data && response.data.questions) {\n        setGeneratedTest(response.data);\n      } else {\n        throw new Error('生成测试题失败，请重试');\n      }\n    } catch (err) {\n      console.error('生成测试题错误:', err);\n      setError('生成测试题失败，请重试');\n\n      // 如果后端API未实现，使用模拟数据进行演示\n      simulateTestGeneration();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 模拟测试生成（当后端API未实现时使用）\n  const simulateTestGeneration = () => {\n    var _mathTypes$find;\n    // 根据选择的类型和难度生成模拟题目\n    const mockQuestions = [];\n    const difficultyMap = {\n      easy: '简单',\n      medium: '中等',\n      hard: '困难'\n    };\n    const typeLabel = ((_mathTypes$find = mathTypes.find(t => t.value === testConfig.type)) === null || _mathTypes$find === void 0 ? void 0 : _mathTypes$find.label) || '数学';\n\n    // 使用OpenAI API模拟生成题目（实际项目中应在后端实现）\n    // 这里仅作为前端演示\n    for (let i = 1; i <= testConfig.questionCount; i++) {\n      let questionText = '';\n\n      // 根据不同类型生成不同题目\n      if (testConfig.type === 'calculus') {\n        if (testConfig.difficulty === 'easy') {\n          questionText = `计算函数 f(x) = x^2 + ${i} 在点 x = ${i} 处的导数。`;\n        } else if (testConfig.difficulty === 'medium') {\n          questionText = `求函数 f(x) = ${i}x^3 - ${i + 2}x^2 + ${i * 2}x - ${i} 的极值点。`;\n        } else {\n          questionText = `计算积分 ∫(${i}x^2 + sin(${i}x))dx。`;\n        }\n      } else if (testConfig.type === 'algebra') {\n        if (testConfig.difficulty === 'easy') {\n          questionText = `计算矩阵 A = [[${i}, ${i + 1}], [${i + 2}, ${i + 3}]] 的行列式。`;\n        } else if (testConfig.difficulty === 'medium') {\n          questionText = `求矩阵 A = [[${i}, ${i + 1}, ${i + 2}], [${i + 3}, ${i + 4}, ${i + 5}], [${i + 6}, ${i + 7}, ${i + 8}]] 的特征值。`;\n        } else {\n          questionText = `证明向量组 {(${i},${i + 1},${i + 2}), (${i + 3},${i + 4},${i + 5}), (${i + 6},${i + 7},${i + 8})} 是线性相关的。`;\n        }\n      } else if (testConfig.type === 'probability') {\n        if (testConfig.difficulty === 'easy') {\n          questionText = `一个骰子投掷${i + 1}次，求至少出现一次6点的概率。`;\n        } else if (testConfig.difficulty === 'medium') {\n          questionText = `设随机变量X的概率密度函数为f(x)=${i}e^(-${i}x)，x>0，求E(X)和D(X)。`;\n        } else {\n          questionText = `设总体X服从正态分布N(μ,σ²)，从该总体中抽取容量为${i + 10}的样本，样本均值为${i + 5}，样本方差为${i + 2}，试构造μ的置信水平为0.95的置信区间。`;\n        }\n      } else {\n        questionText = `第${i}题：这是一道${difficultyMap[testConfig.difficulty] || ''}难度的${typeLabel}题目。`;\n      }\n\n      // 生成答案（如果需要）\n      let answer = '';\n      if (testConfig.includeAnswers) {\n        if (testConfig.type === 'calculus') {\n          if (testConfig.difficulty === 'easy') {\n            answer = `f'(${i}) = 2 * ${i} = ${2 * i}`;\n          } else if (testConfig.difficulty === 'medium') {\n            answer = `令f'(x) = 0，得到x = ${i / 3} 或 x = ${i}`;\n          } else {\n            answer = `∫(${i}x^2 + sin(${i}x))dx = ${i}x^3/3 - cos(${i}x)/${i} + C`;\n          }\n        } else if (testConfig.type === 'algebra') {\n          if (testConfig.difficulty === 'easy') {\n            answer = `det(A) = ${i} * ${i + 3} - ${i + 1} * ${i + 2} = ${i * (i + 3) - (i + 1) * (i + 2)}`;\n          } else {\n            answer = `特征值计算过程略，结果为λ₁ = ${i + i}, λ₂ = ${i + 2}, λ₃ = ${i + 4}`;\n          }\n        } else {\n          answer = `解答过程略。最终结果：${Math.random().toFixed(4)}`;\n        }\n      }\n      mockQuestions.push({\n        id: i,\n        question: questionText,\n        answer: answer,\n        type: testConfig.type,\n        difficulty: testConfig.difficulty,\n        topic: availableTopics[i % availableTopics.length] || '通用'\n      });\n    }\n\n    // 设置生成的测试\n    setGeneratedTest({\n      title: `${typeLabel}${difficultyMap[testConfig.difficulty] || ''}难度测试`,\n      description: `包含${testConfig.questionCount}道${typeLabel}题目，难度级别：${difficultyMap[testConfig.difficulty] || '未指定'}`,\n      createdAt: new Date().toISOString(),\n      questions: mockQuestions\n    });\n  };\n\n  // 处理打印功能\n  const handlePrint = () => {\n    const printWindow = window.open('', '_blank');\n    if (!printWindow) {\n      setError('打印窗口被阻止，请允许弹出窗口');\n      return;\n    }\n\n    // 构建打印内容\n    let printContent = `\n      <html>\n        <head>\n          <title>${generatedTest.title}</title>\n          <style>\n            body { font-family: Arial, sans-serif; padding: 20px; }\n            h1 { text-align: center; }\n            .question { margin-bottom: 20px; }\n            .answer { margin-top: 10px; margin-bottom: 30px; padding: 10px; background-color: #f5f5f5; }\n            @media print {\n              .no-print { display: none; }\n              button { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"no-print\" style=\"text-align: right; margin-bottom: 20px;\">\n            <button onclick=\"window.print()\">打印</button>\n          </div>\n          <h1>${generatedTest.title}</h1>\n          <p>${generatedTest.description}</p>\n          <hr>\n    `;\n\n    // 添加题目\n    generatedTest.questions.forEach((q, index) => {\n      printContent += `\n        <div class=\"question\">\n          <h3>题目 ${index + 1}</h3>\n          <p>${q.question}</p>\n      `;\n      if (testConfig.includeAnswers && q.answer) {\n        printContent += `\n          <div class=\"answer\">\n            <strong>答案：</strong>\n            <p>${q.answer}</p>\n          </div>\n        `;\n      }\n      printContent += `</div>`;\n    });\n    printContent += `\n        </body>\n      </html>\n    `;\n    printWindow.document.open();\n    printWindow.document.write(printContent);\n    printWindow.document.close();\n  };\n\n  // 处理保存功能\n  const handleSave = async () => {\n    try {\n      const response = await testsAPI.saveTest(generatedTest);\n      if (response.data && response.data.success) {\n        alert('测试已成功保存！');\n      } else {\n        throw new Error('保存失败');\n      }\n    } catch (err) {\n      console.error('保存测试失败:', err);\n      setError('保存测试失败，请重试');\n    }\n  };\n\n  // 预览对话框\n  const TestPreviewDialog = () => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openPreview,\n    onClose: () => setOpenPreview(false),\n    fullWidth: true,\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [generatedTest === null || generatedTest === void 0 ? void 0 : generatedTest.title, /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        onClick: () => setOpenPreview(false),\n        sx: {\n          position: 'absolute',\n          right: 8,\n          top: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: generatedTest === null || generatedTest === void 0 ? void 0 : generatedTest.questions.map((q, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"\\u9898\\u76EE \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), testConfig.includeAnswers && q.answer && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1,\n            p: 2,\n            bgcolor: '#f5f5f5',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: \"\\u7B54\\u6848\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: q.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mt: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePrint,\n        startIcon: /*#__PURE__*/_jsxDEV(Print, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 50\n        }, this),\n        children: \"\\u6253\\u5370\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 49\n        }, this),\n        color: \"primary\",\n        children: \"\\u4FDD\\u5B58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"\\u751F\\u6210\\u6D4B\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        align: \"center\",\n        color: \"text.secondary\",\n        children: \"\\u914D\\u7F6E\\u6D4B\\u8BD5\\u53C2\\u6570\\uFF0C\\u751F\\u6210\\u4E2A\\u6027\\u5316\\u6570\\u5B66\\u9898\\u76EE\\u6D4B\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"\\u6D4B\\u8BD5\\u7C7B\\u578B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"type\",\n                value: testConfig.type,\n                label: \"\\u6D4B\\u8BD5\\u7C7B\\u578B\",\n                onChange: handleChange,\n                required: true,\n                children: mathTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type.value,\n                  children: type.label\n                }, type.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"\\u96BE\\u5EA6\\u7B49\\u7EA7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"difficulty\",\n                value: testConfig.difficulty,\n                label: \"\\u96BE\\u5EA6\\u7B49\\u7EA7\",\n                onChange: handleChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"easy\",\n                  children: \"\\u7B80\\u5355\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"medium\",\n                  children: \"\\u4E2D\\u7B49\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"hard\",\n                  children: \"\\u56F0\\u96BE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\u9898\\u76EE\\u6570\\u91CF\",\n              name: \"questionCount\",\n              type: \"number\",\n              value: testConfig.questionCount,\n              onChange: handleChange,\n              InputProps: {\n                inputProps: {\n                  min: 1,\n                  max: 50\n                }\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), testConfig.type && availableTopics.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"\\u77E5\\u8BC6\\u70B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"topics\",\n                value: testConfig.topics,\n                label: \"\\u77E5\\u8BC6\\u70B9\",\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"\\u5168\\u90E8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this), availableTopics.map(topic => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: topic,\n                  children: topic\n                }, topic, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: \"\\u5176\\u4ED6\\u9009\\u9879\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"includeAnswers\",\n                  name: \"includeAnswers\",\n                  checked: testConfig.includeAnswers,\n                  onChange: handleCheckboxChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"includeAnswers\",\n                  style: {\n                    marginLeft: '8px'\n                  },\n                  children: \"\\u5305\\u542B\\u7B54\\u6848\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                mt: 2\n              },\n              disabled: loading,\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 28\n              }, this) : '生成测试'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), generatedTest && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"\\u751F\\u6210\\u7684\\u6D4B\\u8BD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(Print, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 28\n            }, this),\n            onClick: handlePrint,\n            sx: {\n              mr: 1\n            },\n            children: \"\\u6253\\u5370\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 28\n            }, this),\n            onClick: handleSave,\n            children: \"\\u4FDD\\u5B58\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: generatedTest.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: generatedTest.questions.slice(0, 3).map((question, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: [\"\\u9898\\u76EE \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: question.topic,\n                    size: \"small\",\n                    color: \"primary\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  paragraph: true,\n                  children: question.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, this), testConfig.includeAnswers && question.answer && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 1,\n                    p: 1,\n                    bgcolor: '#f5f5f5',\n                    borderRadius: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    gutterBottom: true,\n                    children: \"\\u7B54\\u6848\\uFF1A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: question.answer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this), generatedTest.questions.length > 3 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => setOpenPreview(true),\n          children: [\"\\u67E5\\u770B\\u5168\\u90E8 \", generatedTest.questions.length, \" \\u9053\\u9898\\u76EE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this), generatedTest && /*#__PURE__*/_jsxDEV(TestPreviewDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(TestGenerator, \"tJWe98NIjwRc1NSVFzZ/Mc8TSPU=\");\n_c = TestGenerator;\nexport default TestGenerator;\nvar _c;\n$RefreshReg$(_c, \"TestGenerator\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Typography","Box","FormControl","InputLabel","Select","MenuItem","TextField","Button","Grid","CircularProgress","Alert","Card","CardContent","Divider","Chip","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","Print","Save","Close","Refresh","axios","jsxDEV","_jsxDEV","TestGenerator","_s","testConfig","setTestConfig","type","difficulty","questionCount","topics","includeAnswers","loading","setLoading","error","setError","generatedTest","setGeneratedTest","openPreview","setOpenPreview","mathTypes","value","label","availableTopics","setAvailableTopics","selectedType","find","handleChange","e","name","target","prev","handleCheckboxChange","checked","handleSubmit","preventDefault","requestData","parseInt","response","testsAPI","generateTest","data","questions","Error","err","console","simulateTestGeneration","_mathTypes$find","mockQuestions","difficultyMap","easy","medium","hard","typeLabel","t","i","questionText","answer","Math","random","toFixed","push","id","question","topic","length","title","description","createdAt","Date","toISOString","handlePrint","printWindow","window","open","printContent","forEach","q","index","document","write","close","handleSave","saveTest","success","alert","TestPreviewDialog","onClose","fullWidth","maxWidth","children","onClick","sx","position","right","top","fileName","_jsxFileName","lineNumber","columnNumber","dividers","map","mb","variant","gutterBottom","paragraph","mt","p","bgcolor","borderRadius","startIcon","color","severity","elevation","align","component","onSubmit","container","spacing","item","xs","sm","onChange","required","InputProps","inputProps","min","max","display","alignItems","htmlFor","style","marginLeft","size","disabled","justifyContent","mr","slice","textAlign","_c","$RefreshReg$"],"sources":["D:/university_math/src/components/Tests/TestGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  CircularProgress,\r\n  Alert,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Print, Save, Close, Refresh } from '@mui/icons-material';\r\nimport axios from 'axios';\r\n\r\nconst TestGenerator = () => {\r\n  const [testConfig, setTestConfig] = useState({\r\n    type: '',\r\n    difficulty: '',\r\n    questionCount: 10,\r\n    topics: '',\r\n    includeAnswers: true,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [generatedTest, setGeneratedTest] = useState(null);\r\n  const [openPreview, setOpenPreview] = useState(false);\r\n  \r\n  // 数学题类型选项\r\n  const mathTypes = [\r\n    { value: 'calculus', label: '微积分', topics: ['极限', '导数', '积分', '微分方程'] },\r\n    { value: 'algebra', label: '线性代数', topics: ['矩阵', '行列式', '向量空间', '特征值'] },\r\n    { value: 'probability', label: '概率统计', topics: ['概率分布', '随机变量', '假设检验', '回归分析'] },\r\n  ];\r\n  \r\n  // 当前选择类型的可用主题\r\n  const [availableTopics, setAvailableTopics] = useState([]);\r\n  \r\n  // 当类型改变时更新可用主题\r\n  useEffect(() => {\r\n    if (testConfig.type) {\r\n      const selectedType = mathTypes.find(type => type.value === testConfig.type);\r\n      if (selectedType) {\r\n        setAvailableTopics(selectedType.topics);\r\n      }\r\n    } else {\r\n      setAvailableTopics([]);\r\n    }\r\n  }, [testConfig.type]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTestConfig((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  \r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setTestConfig((prev) => ({\r\n      ...prev,\r\n      [name]: checked,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setGeneratedTest(null);\r\n    \r\n    try {\r\n      // 构建请求参数\r\n      const requestData = {\r\n        ...testConfig,\r\n        questionCount: parseInt(testConfig.questionCount, 10),\r\n      };\r\n      \r\n      // 调用后端API生成测试题\r\n      const response = await testsAPI.generateTest(requestData);\r\n      \r\n      if (response.data && response.data.questions) {\r\n        setGeneratedTest(response.data);\r\n      } else {\r\n        throw new Error('生成测试题失败，请重试');\r\n      }\r\n    } catch (err) {\r\n      console.error('生成测试题错误:', err);\r\n      setError('生成测试题失败，请重试');\r\n      \r\n      // 如果后端API未实现，使用模拟数据进行演示\r\n      simulateTestGeneration();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // 模拟测试生成（当后端API未实现时使用）\r\n  const simulateTestGeneration = () => {\r\n    // 根据选择的类型和难度生成模拟题目\r\n    const mockQuestions = [];\r\n    const difficultyMap = {\r\n      easy: '简单',\r\n      medium: '中等',\r\n      hard: '困难'\r\n    };\r\n    \r\n    const typeLabel = mathTypes.find(t => t.value === testConfig.type)?.label || '数学';\r\n    \r\n    // 使用OpenAI API模拟生成题目（实际项目中应在后端实现）\r\n    // 这里仅作为前端演示\r\n    for (let i = 1; i <= testConfig.questionCount; i++) {\r\n      let questionText = '';\r\n      \r\n      // 根据不同类型生成不同题目\r\n      if (testConfig.type === 'calculus') {\r\n        if (testConfig.difficulty === 'easy') {\r\n          questionText = `计算函数 f(x) = x^2 + ${i} 在点 x = ${i} 处的导数。`;\r\n        } else if (testConfig.difficulty === 'medium') {\r\n          questionText = `求函数 f(x) = ${i}x^3 - ${i+2}x^2 + ${i*2}x - ${i} 的极值点。`;\r\n        } else {\r\n          questionText = `计算积分 ∫(${i}x^2 + sin(${i}x))dx。`;\r\n        }\r\n      } else if (testConfig.type === 'algebra') {\r\n        if (testConfig.difficulty === 'easy') {\r\n          questionText = `计算矩阵 A = [[${i}, ${i+1}], [${i+2}, ${i+3}]] 的行列式。`;\r\n        } else if (testConfig.difficulty === 'medium') {\r\n          questionText = `求矩阵 A = [[${i}, ${i+1}, ${i+2}], [${i+3}, ${i+4}, ${i+5}], [${i+6}, ${i+7}, ${i+8}]] 的特征值。`;\r\n        } else {\r\n          questionText = `证明向量组 {(${i},${i+1},${i+2}), (${i+3},${i+4},${i+5}), (${i+6},${i+7},${i+8})} 是线性相关的。`;\r\n        }\r\n      } else if (testConfig.type === 'probability') {\r\n        if (testConfig.difficulty === 'easy') {\r\n          questionText = `一个骰子投掷${i+1}次，求至少出现一次6点的概率。`;\r\n        } else if (testConfig.difficulty === 'medium') {\r\n          questionText = `设随机变量X的概率密度函数为f(x)=${i}e^(-${i}x)，x>0，求E(X)和D(X)。`;\r\n        } else {\r\n          questionText = `设总体X服从正态分布N(μ,σ²)，从该总体中抽取容量为${i+10}的样本，样本均值为${i+5}，样本方差为${i+2}，试构造μ的置信水平为0.95的置信区间。`;\r\n        }\r\n      } else {\r\n        questionText = `第${i}题：这是一道${difficultyMap[testConfig.difficulty] || ''}难度的${typeLabel}题目。`;\r\n      }\r\n      \r\n      // 生成答案（如果需要）\r\n      let answer = '';\r\n      if (testConfig.includeAnswers) {\r\n        if (testConfig.type === 'calculus') {\r\n          if (testConfig.difficulty === 'easy') {\r\n            answer = `f'(${i}) = 2 * ${i} = ${2*i}`;\r\n          } else if (testConfig.difficulty === 'medium') {\r\n            answer = `令f'(x) = 0，得到x = ${i/3} 或 x = ${i}`;\r\n          } else {\r\n            answer = `∫(${i}x^2 + sin(${i}x))dx = ${i}x^3/3 - cos(${i}x)/${i} + C`;\r\n          }\r\n        } else if (testConfig.type === 'algebra') {\r\n          if (testConfig.difficulty === 'easy') {\r\n            answer = `det(A) = ${i} * ${i+3} - ${i+1} * ${i+2} = ${i*(i+3) - (i+1)*(i+2)}`;\r\n          } else {\r\n            answer = `特征值计算过程略，结果为λ₁ = ${i+i}, λ₂ = ${i+2}, λ₃ = ${i+4}`;\r\n          }\r\n        } else {\r\n          answer = `解答过程略。最终结果：${Math.random().toFixed(4)}`;\r\n        }\r\n      }\r\n      \r\n      mockQuestions.push({\r\n        id: i,\r\n        question: questionText,\r\n        answer: answer,\r\n        type: testConfig.type,\r\n        difficulty: testConfig.difficulty,\r\n        topic: availableTopics[i % availableTopics.length] || '通用'\r\n      });\r\n    }\r\n    \r\n    // 设置生成的测试\r\n    setGeneratedTest({\r\n      title: `${typeLabel}${difficultyMap[testConfig.difficulty] || ''}难度测试`,\r\n      description: `包含${testConfig.questionCount}道${typeLabel}题目，难度级别：${difficultyMap[testConfig.difficulty] || '未指定'}`,\r\n      createdAt: new Date().toISOString(),\r\n      questions: mockQuestions\r\n    });\r\n  };\r\n\r\n  // 处理打印功能\r\n  const handlePrint = () => {\r\n    const printWindow = window.open('', '_blank');\r\n    \r\n    if (!printWindow) {\r\n      setError('打印窗口被阻止，请允许弹出窗口');\r\n      return;\r\n    }\r\n    \r\n    // 构建打印内容\r\n    let printContent = `\r\n      <html>\r\n        <head>\r\n          <title>${generatedTest.title}</title>\r\n          <style>\r\n            body { font-family: Arial, sans-serif; padding: 20px; }\r\n            h1 { text-align: center; }\r\n            .question { margin-bottom: 20px; }\r\n            .answer { margin-top: 10px; margin-bottom: 30px; padding: 10px; background-color: #f5f5f5; }\r\n            @media print {\r\n              .no-print { display: none; }\r\n              button { display: none; }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"no-print\" style=\"text-align: right; margin-bottom: 20px;\">\r\n            <button onclick=\"window.print()\">打印</button>\r\n          </div>\r\n          <h1>${generatedTest.title}</h1>\r\n          <p>${generatedTest.description}</p>\r\n          <hr>\r\n    `;\r\n    \r\n    // 添加题目\r\n    generatedTest.questions.forEach((q, index) => {\r\n      printContent += `\r\n        <div class=\"question\">\r\n          <h3>题目 ${index + 1}</h3>\r\n          <p>${q.question}</p>\r\n      `;\r\n      \r\n      if (testConfig.includeAnswers && q.answer) {\r\n        printContent += `\r\n          <div class=\"answer\">\r\n            <strong>答案：</strong>\r\n            <p>${q.answer}</p>\r\n          </div>\r\n        `;\r\n      }\r\n      \r\n      printContent += `</div>`;\r\n    });\r\n    \r\n    printContent += `\r\n        </body>\r\n      </html>\r\n    `;\r\n    \r\n    printWindow.document.open();\r\n    printWindow.document.write(printContent);\r\n    printWindow.document.close();\r\n  };\r\n  \r\n  // 处理保存功能\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await testsAPI.saveTest(generatedTest);\r\n      if (response.data && response.data.success) {\r\n        alert('测试已成功保存！');\r\n      } else {\r\n        throw new Error('保存失败');\r\n      }\r\n    } catch (err) {\r\n      console.error('保存测试失败:', err);\r\n      setError('保存测试失败，请重试');\r\n    }\r\n  };\r\n  \r\n  // 预览对话框\r\n  const TestPreviewDialog = () => (\r\n    <Dialog \r\n      open={openPreview} \r\n      onClose={() => setOpenPreview(false)}\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle>\r\n        {generatedTest?.title}\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={() => setOpenPreview(false)}\r\n          sx={{ position: 'absolute', right: 8, top: 8 }}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        {generatedTest?.questions.map((q, index) => (\r\n          <Box key={index} sx={{ mb: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              题目 {index + 1}\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n              {q.question}\r\n            </Typography>\r\n            {testConfig.includeAnswers && q.answer && (\r\n              <Box sx={{ mt: 1, p: 2, bgcolor: '#f5f5f5', borderRadius: 1 }}>\r\n                <Typography variant=\"subtitle2\" gutterBottom>\r\n                  答案：\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  {q.answer}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n            <Divider sx={{ mt: 2 }} />\r\n          </Box>\r\n        ))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handlePrint} startIcon={<Print />}>\r\n          打印\r\n        </Button>\r\n        <Button onClick={handleSave} startIcon={<Save />} color=\"primary\">\r\n          保存\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      <Paper elevation={3} sx={{ p: 4, mt: 4 }}>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          生成测试\r\n        </Typography>\r\n        <Typography variant=\"body1\" paragraph align=\"center\" color=\"text.secondary\">\r\n          配置测试参数，生成个性化数学题目测试\r\n        </Typography>\r\n        \r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>测试类型</InputLabel>\r\n                <Select\r\n                  name=\"type\"\r\n                  value={testConfig.type}\r\n                  label=\"测试类型\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {mathTypes.map((type) => (\r\n                    <MenuItem key={type.value} value={type.value}>{type.label}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>难度等级</InputLabel>\r\n                <Select\r\n                  name=\"difficulty\"\r\n                  value={testConfig.difficulty}\r\n                  label=\"难度等级\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  <MenuItem value=\"easy\">简单</MenuItem>\r\n                  <MenuItem value=\"medium\">中等</MenuItem>\r\n                  <MenuItem value=\"hard\">困难</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"题目数量\"\r\n                name=\"questionCount\"\r\n                type=\"number\"\r\n                value={testConfig.questionCount}\r\n                onChange={handleChange}\r\n                InputProps={{ inputProps: { min: 1, max: 50 } }}\r\n                required\r\n              />\r\n            </Grid>\r\n            \r\n            {testConfig.type && availableTopics.length > 0 && (\r\n              <Grid item xs={12}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>知识点</InputLabel>\r\n                  <Select\r\n                    name=\"topics\"\r\n                    value={testConfig.topics}\r\n                    label=\"知识点\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value=\"\">全部</MenuItem>\r\n                    {availableTopics.map((topic) => (\r\n                      <MenuItem key={topic} value={topic}>{topic}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            \r\n            <Grid item xs={12}>\r\n              <FormControl component=\"fieldset\" sx={{ mt: 2 }}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                  其他选项\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"includeAnswers\"\r\n                    name=\"includeAnswers\"\r\n                    checked={testConfig.includeAnswers}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                  <label htmlFor=\"includeAnswers\" style={{ marginLeft: '8px' }}>\r\n                    包含答案\r\n                  </label>\r\n                </Box>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                sx={{ mt: 2 }}\r\n                disabled={loading}\r\n              >\r\n                {loading ? <CircularProgress size={24} /> : '生成测试'}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n      \r\n      {generatedTest && (\r\n        <Paper elevation={3} sx={{ p: 4, mt: 4 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n            <Typography variant=\"h5\">\r\n              生成的测试\r\n            </Typography>\r\n            <Box>\r\n              <Button \r\n                variant=\"outlined\" \r\n                startIcon={<Print />} \r\n                onClick={handlePrint}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                打印\r\n              </Button>\r\n              <Button \r\n                variant=\"outlined\" \r\n                startIcon={<Save />} \r\n                onClick={handleSave}\r\n              >\r\n                保存\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          \r\n          <Typography variant=\"body1\" paragraph>\r\n            {generatedTest.description}\r\n          </Typography>\r\n          \r\n          <Box sx={{ mb: 3 }}>\r\n            <Grid container spacing={2}>\r\n              {generatedTest.questions.slice(0, 3).map((question, index) => (\r\n                <Grid item xs={12} key={index}>\r\n                  <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                        <Typography variant=\"subtitle1\" gutterBottom>\r\n                          题目 {index + 1}\r\n                        </Typography>\r\n                        <Chip \r\n                          label={question.topic} \r\n                          size=\"small\" \r\n                          color=\"primary\" \r\n                          variant=\"outlined\" \r\n                        />\r\n                      </Box>\r\n                      <Typography variant=\"body1\" paragraph>\r\n                        {question.question}\r\n                      </Typography>\r\n                      {testConfig.includeAnswers && question.answer && (\r\n                        <Box sx={{ mt: 1, p: 1, bgcolor: '#f5f5f5', borderRadius: 1 }}>\r\n                          <Typography variant=\"subtitle2\" gutterBottom>\r\n                            答案：\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {question.answer}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n          \r\n          {generatedTest.questions.length > 3 && (\r\n            <Box sx={{ textAlign: 'center', mt: 2 }}>\r\n              <Button \r\n                variant=\"contained\" \r\n                onClick={() => setOpenPreview(true)}\r\n              >\r\n                查看全部 {generatedTest.questions.length} 道题目\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n      )}\r\n      \r\n      {generatedTest && <TestPreviewDialog />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TestGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}