{"ast":null,"code":"import axios from 'axios';\n\n// 从环境变量获取API基础URL，如果不存在则使用默认值\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器 - 添加认证token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 认证相关API\nexport const authAPI = {\n  register: userData => api.post('/api/auth/register', userData),\n  login: credentials => api.post('/api/auth/login', credentials)\n};\n\n// 问题相关API\nexport const questionsAPI = {\n  getQuestions: () => api.get('/api/questions'),\n  getQuestionById: id => api.get(`/api/questions/${id}`),\n  createQuestion: questionData => api.post('/api/questions', questionData)\n};\n\n// 学习进度相关API\nexport const progressAPI = {\n  getUserProgress: () => api.get('/api/progress'),\n  updateProgress: progressData => api.post('/api/progress', progressData)\n};\n\n// 用户相关API\nexport const userAPI = {\n  getUserProfile: () => api.get('/api/user/profile'),\n  updateUserProfile: profileData => api.put('/api/user/profile', profileData)\n};\n\n// 测试相关API\nexport const testsAPI = {\n  generateTest: testConfig => api.post('/api/tests/generate', testConfig),\n  saveTest: testData => api.post('/api/tests/save', testData)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authAPI","register","userData","post","login","credentials","questionsAPI","getQuestions","get","getQuestionById","id","createQuestion","questionData","progressAPI","getUserProgress","updateProgress","progressData","userAPI","getUserProfile","updateUserProfile","profileData","put","testsAPI","generateTest","testConfig","saveTest","testData"],"sources":["D:/university_math/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// 从环境变量获取API基础URL，如果不存在则使用默认值\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n\r\n// 创建axios实例\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 认证相关API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/api/auth/register', userData),\r\n  login: (credentials) => api.post('/api/auth/login', credentials),\r\n};\r\n\r\n// 问题相关API\r\nexport const questionsAPI = {\r\n  getQuestions: () => api.get('/api/questions'),\r\n  getQuestionById: (id) => api.get(`/api/questions/${id}`),\r\n  createQuestion: (questionData) => api.post('/api/questions', questionData),\r\n};\r\n\r\n// 学习进度相关API\r\nexport const progressAPI = {\r\n  getUserProgress: () => api.get('/api/progress'),\r\n  updateProgress: (progressData) => api.post('/api/progress', progressData),\r\n};\r\n\r\n// 用户相关API\r\nexport const userAPI = {\r\n  getUserProfile: () => api.get('/api/user/profile'),\r\n  updateUserProfile: (profileData) => api.put('/api/user/profile', profileData),\r\n};\r\n\r\n// 测试相关API\r\nexport const testsAPI = {\r\n  generateTest: (testConfig) => api.post('/api/tests/generate', testConfig),\r\n  saveTest: (testData) => api.post('/api/tests/save', testData),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;;AAElF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IAAKjB,GAAG,CAACkB,IAAI,CAAC,oBAAoB,EAAED,QAAQ,CAAC;EAChEE,KAAK,EAAGC,WAAW,IAAKpB,GAAG,CAACkB,IAAI,CAAC,iBAAiB,EAAEE,WAAW;AACjE,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,gBAAgB,CAAC;EAC7CC,eAAe,EAAGC,EAAE,IAAKzB,GAAG,CAACuB,GAAG,CAAC,kBAAkBE,EAAE,EAAE,CAAC;EACxDC,cAAc,EAAGC,YAAY,IAAK3B,GAAG,CAACkB,IAAI,CAAC,gBAAgB,EAAES,YAAY;AAC3E,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,eAAe,EAAEA,CAAA,KAAM7B,GAAG,CAACuB,GAAG,CAAC,eAAe,CAAC;EAC/CO,cAAc,EAAGC,YAAY,IAAK/B,GAAG,CAACkB,IAAI,CAAC,eAAe,EAAEa,YAAY;AAC1E,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAG;EACrBC,cAAc,EAAEA,CAAA,KAAMjC,GAAG,CAACuB,GAAG,CAAC,mBAAmB,CAAC;EAClDW,iBAAiB,EAAGC,WAAW,IAAKnC,GAAG,CAACoC,GAAG,CAAC,mBAAmB,EAAED,WAAW;AAC9E,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAG;EACtBC,YAAY,EAAGC,UAAU,IAAKvC,GAAG,CAACkB,IAAI,CAAC,qBAAqB,EAAEqB,UAAU,CAAC;EACzEC,QAAQ,EAAGC,QAAQ,IAAKzC,GAAG,CAACkB,IAAI,CAAC,iBAAiB,EAAEuB,QAAQ;AAC9D,CAAC;AAED,eAAezC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}